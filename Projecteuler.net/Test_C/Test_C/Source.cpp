#include<iostream>
using namespace std;

bool isPrime(long x)
{
	if (x < 2)return false;
	if (x > 2) {
		if (x % 2 == 0)return false;
		for (int i = 3; i <= sqrt(x); i += 2) {
			if (x%i == 0)return false;
		}
	}
	return true;
}

long LargestPrimeFactor(long x)
{

	for (int i = 2; i <= x; i++)
	{
		
	}
	return x;
}

int Fibonacci(int idx)
{
	if (idx == 1) return 1;
	if (idx == 2) return 2;
	if (idx > 2) return Fibonacci(idx - 1) + Fibonacci(idx - 2);
	return 0;
}

int main()
{
	/*bool DS;
	int check;
	unsigned char b = 0x56;
	unsigned char i;
	check = b & (0x80 >> 1);
	DS = b & (0x80 >> 1);
	cout << "DS = " << DS << endl;
	cout << "check = " << check << endl;
	bool x = 23;
	cout << x;
	system("pause");*/

	/*
	Multiples of 3 and 5
	Problem 1
	If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
	Find the sum of all the multiples of 3 or 5 below 1000.*/
	int num(0), sum(0);
	while (++num < 1000){
		sum += (!(num % 3) || !(num % 5)) ? num : 0;
	}

	/*
	Even Fibonacci numbers
	Problem 2
	Each new term in the Fibonacci sequence is generated by adding the previous two terms.By starting with 1 and 2, the first 10 terms will be :
	1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
	By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even - valued terms.*/
	int idx = 0;
	sum = 0;
	while (true){
		int temp = Fibonacci(idx);
		if (temp < 4000000 && temp % 2 == 0) {
			sum += temp;
		}
		if (temp >= 4000000) {
			break;
		}
		idx++;
	}
	cout << sum;
	/*Largest prime factor
	Problem 3 
	The prime factors of 13195 are 5, 7, 13 and 29.
	What is the largest prime factor of the number 600851475143 ?*/

	cout << isPrime(9);



	system("pause");
	return 0;
}