/*Pentagon numbers
Problem 44 
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?*/

#include<iostream>
#include<algorithm>
#include<string>
#include<vector>
#include<ctime>
using namespace std; 
int main()
{
	clock_t t = clock();
	vector<long long> P;
	int n = 1;
	while (true)
	{ 
		P.push_back(n *(3 * n - 1) / 2);
		for (int i = 1; i <= n - 2; i++)
		{
			int Pk = (i + 1) * (3 * (i + 1) - 1) / 2;
			int Pj = P[n - 1] - Pk;
			if (binary_search(P.begin(), P.begin() + i, Pj))
			{
				int D = Pk - Pj;
				//cout << P[n - 1] << "= " << Pk << " + " << Pj << ", D = Pk - Pj " << D << ", n = " << n << ", k = " << i + 1 << ", j = " << j <<endl;
				if (binary_search(P.begin(), P.begin() + i, D))
				{
					cout << D;
					goto finish;
				}
			}
		}
		n++;
	}
finish:
	t = clock() - t;
	cout << " done in " << (double)t / CLOCKS_PER_SEC << endl;
	system("pause");
	return 0;
}